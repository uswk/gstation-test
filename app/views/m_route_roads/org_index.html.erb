<h1>推奨ルート補正画面</h1>
<%= form_tag("m_route_recommends", method: "post", id: "input_form", name: "input_form") do %>
  収集区名：<%= @m_route.route_name  %>
  <br><br>
  <input type=button value="補正確定" onClick="f_route_road_submit(<%= @m_route_recommend.id %>);"> | 
  <%= link_to '戻る', m_route_recommends_path(:routecode => @m_route.route_code) %>
  <br><br>
  <div class="map_container">
    <div id="map_canvas" style="width:100%; height:500px"></div>
  </div>
  <input type=hidden id=routecode name=routecode value=<%= @m_route.route_code.to_s %>>
  <input type=hidden id=upd_flg name=upd_flg value=4>
  <input type=hidden id=route_recommend_id name=route_recommend_id value=<%= params[:recommend_id] %>>
  <input type=hidden id=latlng name=latlng>
<% end %>

<% content_for :scripts do %>
  <script src="//maps.googleapis.com/maps/api/js?sensor=false&key=<%= @map_key %>"></script>
  <script src="//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js" type="text/javascript"></script>
  <script type="text/javascript" charset="utf-8">
    var latlngData="";
    var latlngData2="";
    var snappedCoordinates = new Array();
    var iCount = 0;
    // ラインを引く座標の配列の入れ物を作成
    var points = new Array();
    var poly;
    var polyRoad;
    var polyLine = "";
    var arrPoly = new Array();
    var arrPoly2 = new Array();
    var pattern_count = eval("<%= params[:pattern_count] %>");
    // ラインオプションを作成
    var polyLineOptions = {
      path: null,
      strokeWeight: 3,
      strokeColor: "#ff0000",
      strokeOpacity: "1"
    };

    var lat = <%= @def_lat %>;
    var lng = <%= @def_lng %>;
    var mapOptions = {
      zoom: 15,
      center: new google.maps.LatLng(lat, lng),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      scaleControl: true
    };
    var map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
    
    //ポリライン表示
    latlngData = (new Function("return " + "[" + "<%= @m_route_recommend.latlng.to_s %>" + "]"))();
    polyLineOptions.path = latlngData;
    poly = new google.maps.Polyline(polyLineOptions);
    poly.setMap(map);
    
    //表示位置移動
    var pos = new google.maps.LatLng(latlngData[0].lat,latlngData[0].lng);
    map.panTo(pos);
    
    //補正用ポリライン表示
    for (i = 0;i < latlngData.length;i++) {
      //補正用緯度経度保管
      if(iCount!=0){
        latlngData2 = latlngData2 + "|";
      }
      latlngData2 = latlngData2 + latlngData[i].lat + "," + latlngData[i].lng;
      
      if(iCount<=pattern_count){
        iCount = iCount + 1;
        //最後のレコードの場合
        if(i==latlngData.length-1){
          requestSnapToRoads(latlngData2);
          sleep(100);
        }
      }else{
        //補正ルート
        requestSnapToRoads(latlngData2);
        
        latlngData2 = "";
        iCount = 0;
        sleep(100);
      }
    }
    
    alert("１回目ルート補正完了");
    
    arrPoly2 = arrPoly;
    arrPoly = new Array();
    
    $.each(arrPoly2, function(i, value) {
      if(i>0){
        requestSnapToRoads(arrPoly2[i-1][arrPoly2[i-1].length-1].toString().replace("(", "").replace(")", "") + "|" + arrPoly2[i][0].toString().replace("(", "").replace(")", ""));
        sleep(100);
      }
    });
    
    alert("２回目ルート補正完了");
    
    $.each(arrPoly2, function(i, value) {
      if(i>0){
        polyLine = polyLine + "," + arrPoly[i-1].toString();
      }
      if(polyLine){
        polyLine = polyLine + ",";
      }
      polyLine = polyLine + arrPoly2[i].toString();
    });

    // スナップされた地点をもとにPolylineを表示
    polyRoad = new google.maps.Polyline({
      path: (new Function("return " + "[" + polyLine.replace(/,/g,",lng:").replace(/\)\,lng\:/g,"},").replace(/\(/g,"{lat:").replace(/\)/g,"}") + "]"))(),
      strokeColor: "#000000",
      strokeWeight: 3
    });
    polyRoad.setMap(map);
    //補正緯度経度保管
    document.getElementById("latlng").value = polyLine;
    
    function requestSnapToRoads(originalPath){
      
      $.get("https://roads.googleapis.com/v1/snapToRoads", {
        interpolate: true,	// 補完を行うかどうか
        key: "<%= @map_key %>",
        path: originalPath
      }, function(data){
        processResponse(data);
      });
    };
    
    // レスポンス処理
    function processResponse(data){
      snappedCoordinates = new Array();
      var position;
      var position_lat=0;
      var position_lng=0;
      
      for(var i = 0; i < data.snappedPoints.length; i++){
        // スナップされた地点の取得
        position = new google.maps.LatLng(
          data.snappedPoints[i].location.latitude,
          data.snappedPoints[i].location.longitude);
        if(eval(position_lat)!=eval(data.snappedPoints[i].location.latitude) || eval(position_lng)!=eval(data.snappedPoints[i].location.longitude)){  //緯度経度が前回と違う場合のみ追加
          snappedCoordinates.push(position);
        }
        position_lat = data.snappedPoints[i].location.latitude;
        position_lng = data.snappedPoints[i].location.longitude;
      }
      arrPoly.push(snappedCoordinates);
    }
    
    //遅延処理
    function sleep( msec ) {
      var start = new Date;
      while (1) {
        var cur = new Date;
        if ( msec <= cur.getTime() - start.getTime()) {
          break;
        }
      }
    }
    
    function f_route_road_submit(recommend_id){
      if(!window.confirm('推奨ルートの補正を行いますがよろしいですか？\n※黒線に変更されます。')){
        return false;
      }
      
      $("#input_form").submit();
    }
  </script>
<% end %>
